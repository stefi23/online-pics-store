{"version":3,"sources":["Context.js","components/Header.js","hooks/useHoover.js","components/Image.js","utils/index.js","pages/Photos.js","components/CartItem.js","pages/Cart.js","App.js","reportWebVitals.js","index.js"],"names":["Context","React","createContext","ContextProvider","children","useState","allPhotos","setAllPhotos","cartItems","setCartItems","toggleFavorite","id","updatedArr","map","photo","isFavorite","useEffect","getAllPhotos","a","axios","get","resp","data","console","log","Provider","value","addToCart","imgObj","removeFromCart","prevItems","filter","item","emptyCart","Header","cartClassName","useContext","length","to","className","useHover","isHovered","setIsHoovered","ref","useRef","enter","leave","current","addEventListener","removeEventListener","Image","img","src","url","alt","onClick","some","getClass","i","Photos","imageElements","CartItem","iconClassName","width","Cart","totalCost","buttonText","setButtonText","totalCostDisplay","toLocaleString","style","currency","cartItemElements","setTimeout","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6ed2da44.chunk.js","sourcesContent":["import React, {useState , useEffect} from 'react'\nimport axios from 'axios';\n\nconst Context = React.createContext()\n\nfunction ContextProvider({children}){\nconst [allPhotos, setAllPhotos] = useState([])\nconst [cartItems, setCartItems] = useState([])\n\nconst addToCart = (imgObj) => {\n    setCartItems(cartItems => [...cartItems, imgObj])\n} \n\nconst removeFromCart = (id) => {\n        setCartItems(prevItems => prevItems.filter(item => item.id !== id))\n    }\n\nconst emptyCart = () => {\n        setCartItems([])\n    }\n\nconst toggleFavorite = (id) => {\n    const updatedArr = allPhotos.map(photo => {\n            if(photo.id === id) {\n                return {\n                    ...photo,\n                    isFavorite: !photo.isFavorite\n                }\n            }\n            return photo\n        })\n    setAllPhotos(updatedArr)\n}\n\n\nuseEffect(() => {\n    getAllPhotos()\n}, [])\n\nconst getAllPhotos = async () => {\n    try {\n    const resp = await axios.get('https://raw.githubusercontent.com/bobziroll/scrimba-react-bootcamp-images/master/images.json')\n    setAllPhotos(resp.data)\n    }\n    catch(err){\n        console.log(err)\n    }\n}\n\n    return (\n        <Context.Provider value={{allPhotos, cartItems, toggleFavorite, addToCart, removeFromCart, emptyCart}} toggleFavorite={toggleFavorite}>\n            {children}\n        </Context.Provider>\n    )\n}\n\n\n\nexport { ContextProvider, Context} \n","import React, {useContext} from 'react'\nimport {Link} from \"react-router-dom\"\nimport {Context} from '../Context'\n\nfunction Header(){\nconst {cartItems} = useContext(Context)\nconst cartClassName = cartItems.length > 0 ? \"ri-shopping-cart-fill\" : \"ri-shopping-cart-line\"\n\n    return(\n     <div>\n            <header>\n                <Link to=\"/\">Pic Some</Link>\n                <Link to=\"/cart\"><i className={`${cartClassName} ri-fw ri-2x`}></i></Link>\n            </header>\n\n        </div>\n    )\n\n}\n\nexport default Header\n","import {useState, useEffect,useRef} from 'react'\n\nfunction useHover() {\n    const [isHovered, setIsHoovered] = useState(false)\n    const ref = useRef(null)\n\n    const enter = () => {\n        setIsHoovered(true)\n    }\n\n    const leave = () => {\n        setIsHoovered(false)\n    }\n\n        useEffect(() => {\n        ref.current.addEventListener(\"mouseenter\", enter)\n        ref.current.addEventListener(\"mouseleave\", leave)\n        \n        return () => {    \n            ref.current?.removeEventListener(\"mouseenter\", enter)\n            ref.current?.removeEventListener(\"mouseleave\", leave)\n        }\n    }, [])\n    \n    return [isHovered, ref]\n}\n\nexport default useHover","import React, {useContext} from 'react';\nimport { Context } from '../Context'\nimport PropTypes from 'prop-types';\nimport useHover from '../hooks/useHoover'\n\nImage.propTypes = {\n  className: PropTypes.string,\n  img: PropTypes.shape({\n    url: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n    isFavorite: PropTypes.bool\n\n  }),\n}\n\nfunction Image({className, img}){\n    const {cartItems, toggleFavorite, addToCart, removeFromCart} = useContext(Context)\n    const [isHovered, ref] = useHover()\n\n    \n    const heartIcon = () => {\n        if(img.isFavorite) {\n            return <i className='ri-heart-fill favorite' onClick={() => toggleFavorite(img.id)}></i>\n        } else if(isHovered) {\n            return <i className='ri-heart-line favorite' onClick={() => toggleFavorite(img.id)}></i>\n        }\n    }\n    \n    const cartIcon = () => {\n        const alreadyInCart = cartItems.some(item => item.id === img.id)\n        if(alreadyInCart) {\n            return <i className='ri-shopping-cart-fill cart' onClick={() => removeFromCart(img.id)}></i>\n        } else if(isHovered) {\n            return <i className='ri-add-circle-line cart' onClick={() => addToCart(img)}></i>\n        }\n    }\n    return(\n        <div \n            className={`${className} image-container`}\n            ref={ref}\n            >\n        <img    \n            src={img.url} className='image-grid'\n            alt='Images from catalog'/>\n             {heartIcon()}\n             {cartIcon()}\n         </div>\n    )\n}\n\nexport default Image\n","export function getClass(i) {\n    if (i % 5 === 0) {\n        return 'big';\n    }\n    else if (i % 6 === 0) {\n        return 'wide'\n    }\n}","import React, {useContext} from \"react\"\nimport { Context } from \"../Context\"\nimport Image from '../components/Image'\nimport {getClass} from \"../utils\"\n\nfunction Photos() {\n    const {allPhotos} = useContext(Context)\n    const imageElements = allPhotos.map((img, i) => (\n        <Image key={img.id} img={img} className={getClass(i)} />\n    ))\n\n    return(\n        <main className=\"photos\">\n            {imageElements}\n        </main>\n    )\n}\n\nexport default Photos","import React, {useContext} from \"react\"\nimport {Context} from '../Context'\nimport PropTypes from 'prop-types'\n\nimport useHover from '../hooks/useHoover'\n\n\nCartItem.propTypes = {\n    item: PropTypes.shape({\n        url: PropTypes.string.isRequired\n    })\n}\n\nfunction CartItem({item}){\n    const {removeFromCart} = useContext(Context)\n    const [isHovered, ref] = useHover()\n\n   const iconClassName = isHovered ? 'ri-delete-bin-fill' : 'ri-delete-bin-line'\n\n    return(\n        <div className='cart-item'>\n            <i  className={iconClassName} \n                onClick={()=> removeFromCart(item.id)}\n                ref={ref}>\n            </i>\n            <img src={item.url} width='130px' alt=\"Srimba JSON test images\" />\n            <p>$5.99</p>\n        </div>\n    \n    )\n}\n\nexport default CartItem","import React, {useContext, useState} from \"react\"\nimport {Context} from '../Context'\nimport CartItem from '../components/CartItem'\n\nfunction Cart() {\n    const {cartItems, emptyCart} = useContext(Context)\n    const totalCost = 5.99 * cartItems.length\n    const [buttonText, setButtonText] = useState(\"Place Order\")\n    \n    const totalCostDisplay = totalCost.toLocaleString(\"en-US\", {style: \"currency\", currency: \"USD\"})\n    \n    const placeOrder = () => {\n        setButtonText(\"Ordering...\")\n        setTimeout(() => {\n            setButtonText(\"Place Order\")\n            cartItems.length = 0\n        }, 3000)\n        emptyCart()\n    }\n\n    const cartItemElements = cartItems.map(item => (<\n        CartItem key={item.id} item={item}/>\n        ))\n    return (\n        <main className=\"cart-page\">\n            <h1>Check out</h1>\n            {cartItemElements}\n            <p className=\"total-cost\">Total: {totalCostDisplay}</p>\n            <div className=\"order-button\">\n                {cartItems.length >0 ? (\n                <button onClick={placeOrder}>{buttonText}</button>\n                ): (<p>You have no items in your cart.</p>)}       \n            </div>\n        </main>\n    )\n}\n\nexport default Cart","import './App.css';\nimport Header from './components/Header'\nimport Photos from './pages/Photos'\nimport Cart from './pages/Cart'\nimport {Switch, Route} from \"react-router-dom\"\n\n\nfunction App() {\n  return (\n        <div>\n            <Header />\n            <Switch>\n                <Route exact path=\"/\">\n                    <Photos />\n                </Route>\n                \n                <Route path=\"/cart\">\n                    <Cart />\n                </Route>\n            </Switch>\n        </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter as Router} from \"react-router-dom\"\nimport {ContextProvider} from './Context'\n\n\nReactDOM.render(\n  <ContextProvider>\n  <Router>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </Router>\n  </ContextProvider>,\n\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}